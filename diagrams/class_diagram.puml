@startuml

abstract class User #LightPink{
-userName: String
-password: String
-role: String
-id: int

+login(): boolean
+logout(): void
}

class Cashier #LightPink{
+scanBook(int id): id
+processTransaction(): Transcation
+viewBookDetails(Book book): BookDescription
}

class Stocker #LightPink{
+updateStock(Book book, int quantity): void
+viewBookDetails(Book book): BookDescription
}

class Admin #LightPink{
+addUser(Users user): void
+removeUser(int userID): void
}

class UserList #Pink  {
-List<User> users
+viewUsers(): List<User>
+search(String name): User
+getUserByID(int userID): User
+addUser(User user): void
+deleteUser(User user): void
}

class BookList #LightBlue  {
-List<Book> books
+isEmpty(): boolean
+getBooks(): List<Book>
+searchByName(String name): Book
+searchByID(int bookID): Book
+addBook(Book book): void
+removeBook(Book book): void
}

class Book #LightBlue   {
-title: String
-price: double
-genre: String
-currentStock: int
-id: int
}

abstract class Transcation #LightCyan{
-transactionID: int
-cashierID: int
-date: Date
-bookList: List<Book>
+process(): void
+calculateTotal(): double
+addBook(Book book)
}

class Purchase #LightCyan{
 +processPurchase(): void
}

class Return #LightCyan{
+processReturn(): void
}


Cashier "1...*" -- "1" User #pink:"is a"
Stocker "1...*" -- "1" User #pink:"is a"
Admin "1...*" -- "1" User  #pink:"is an"
UserList "1" -- "1...*" User #pink:"Contains"

Stocker "1" -- "*" BookList #blue:"Updates-stock"
Admin "1" -- "1...*" Cashier #green : "Add-or-remove"
Admin "1" -- "1...*" Stocker #green: "Add-or-remove"
Admin "1" -- "1" UserList #green: "Updates"
Cashier "1" -- "*" Transcation #orange: "Performs"
Admin "1" -- "*" Book #green: "view"
Cashier"1" -- "*" Book #orange: "view""
BookList "1" -- "*" Book #red: "Contains"
Transcation "1" -- "1...*" Book #red: "Contains"
Transcation"1" -- "1" Purchase : "Type-of"
Transcation"1" -- "1" Return : "Type-of"


skinparam class {
FontName Times New Roman
FontSize 15
 }

@enduml




=======================================================================
=======================================================================


Note: suggested changes
Book bceomes BookList (has book list, search etc)
Book details becomes just book
remove bookcode from transaction
why does bookdescription have purchasedcount?
if each user type has their id in the class then put in user
are the relations even correct? isnt it like is-a has-a, etc?



fixes:
add patameters to funcs
relation from user and types is is a not has an
add Book is part of Transcation
Cahsier process transaction returns one not takes one as parameter
added UserList class



==========================================================================
==========================================================================

old...


'abstract class User #LightPink{
'-UserName: String
'-Password: String
'-Role: String
'
'+login(): boolean
'+logout(): void
'}
'
'class Cashier #LightPink{
'-CashierID: int
'+processTransaction(Transaction t): void
'+viewBookDetails(Book book): BookDescription
'}
'
'class Stocker #LightPink{
'-StockerID: int
'+updateStock(Book book, int quantity): void
'+viewBookDetails(Book book): BookDescription
'}
'
'class Admin #LightPink{
'-AdminID: int
'+addUser(Users user): void
'+removeUser(int userID): void
'+viewReports(): void
'}
'
'class Book #LightBlue  {
'+getBookDetails(): BookDescription
'}
'
'class BookDescription #LightBlue   {
'-Title: String
'-Genre: String
'-CurrentStock: int
'-PurchasedCount: int
'}
'
'class Transcation #LightCyan{
'-TransactionID: int
'-CashierID: int
'-BookCode: int
'-Date: Date
'-BookList: List<Book>
'+process(): void
'}
'
'class Purchase #LightCyan{
' +processPurchase(): void
'}
'
'class Return #LightCyan{
'+processReturn(): void
'}
'
'
'User "1" -- "1...*" Cashier #pink:"has-a"
'User "1" -- "1...*" Stocker #pink:"has-a"
'User "1" -- "1" Admin  #pink:"has-an"
'
'Stocker "1" -- "*" Book #blue:"Updates-stock"
'Admin "1" -- "1...*" Cashier #green : "Add-or-remove"
'Admin "1" -- "1...*" Stocker #green: "Add-or-remove"
'Cashier "1" -- "*" Transcation #orange: "Performs"
'Admin "1" -- "*" Book #green: "view"
'Cashier"1" -- "*" Book #orange: "view""
'Book "1" -- "1" BookDescription #red: "Describes"
'Transcation"1" -- "1" Purchase : "Type-of"
'Transcation"1" -- "1" Return : "Type-of"
'
'
'skinparam class {
'FontName Times New Roman
'FontSize 15
' }